{"version":3,"sources":["components/drawerList.jsx","components/navbar.jsx","components/normal-text.jsx","components/selector.jsx","components/settings/settings.js","components/editing-page.jsx","components/projectcard.jsx","components/Startcard.jsx","components/homePage.jsx","components/settings/language.js","App.js","serviceWorker.js","index.js"],"names":["DrawerList","react_default","a","createElement","width","List_default","component","Slide_default","direction","in","timeout","enter","ListItem_default","button","style","marginRight","this","props","languageTranslation","userName","Divider_default","ListItemIcon_default","Home_default","Book_default","Person_default","CallReceived_default","Component","Navbar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","drawerOpen","e","prevState","setState","icon","Link","to","link","IconButton_default","color","ArrowBack_default","Menu_default","onClick","toggleDrawer","bind","AppBar_default","position","Toolbar_default","createIcon","Typography_default","variant","title","Drawer_default","open","onClose","drawerList_DrawerList","NormalText","onChange","event","_ref","newValue","value","onSuggestionsFetchRequested","_ref2","suggestions","getSuggestions","onSuggestionsClearRequested","autoSuggestions","getSuggestionValue","suggestion","name","line_translation","newProps","console","log","update","index","content","target","inputValue","trim","toLowerCase","inputLength","length","filter","slice","_this2","_this$state","dist_default","renderSuggestion","MenuItem_default","inputProps","label","line_content","renderSuggestionsContainer","options","Paper_default","assign","containerProps","square","children","renderInputComponent","TextField_default","margin","onBlur","onUnfoucus","fullWidth","Selector","handleChange","mode","selections","map","selection","key","text","FormControl_default","className","InputLabel_default","Select_default","input","Input_default","createMenu","settings","baseURL","EditingPage","songInfo","lines","autoSuggest","isloaded","location","artist","userID","$","getJSON","concat","done","data","returnlst","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","line","push","err","return","_this3","normal_text_NormalText","updateHandler","oldSuggestion","navbar_Navbar","Fade_default","LinearProgress_default","selector_Selector","words","sentences","type_selector","createNormalText","withRouter","ProjectCard","decodeURI","pathname","loadBtn","Startcard","id","welcomeTextHeader","welcomeText","start_project_btn","Home","projects","fadeOut","project","projectcard_ProjectCard","loadProjectText","Startcard_Startcard","projectTag","exit","CircularProgress_default","size","Grow_default","createProjectCard","en","artistText","songText","welcomeTextDrawer","welcomeTextDrawerLogin","dialogTitleText","uploadBtn","logpage","logout_btn","login_btn","loadProject","editing_page_title","translationProject","original_text","translation_text","saving_status","doc_header","doc_text","version","header_0.05","time_0.05","content_0.05","header_0.1","time_0.1","content_0.1","header_0.2","time_0.2","content_0.2","home","logs","createTimedLyrics","usingApplemusic","uploadthetimedlyrics","currentInfo","zh","sentencesmobile","App","languageCode","navigator","language","substr","translation","BrowserRouter","Switch","Route","exact","path","render","homePage_Home","editing_page","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a522546.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport CallReceivedIcon from \"@material-ui/icons/CallReceived\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nexport default class DrawerList extends Component {\r\n  render() {\r\n    return (\r\n      <div width=\"\">\r\n        <List component=\"nav\">\r\n          <Slide direction={\"right\"} in={true} timeout={{ enter: 400 }}>\r\n            <div>\r\n              <ListItem button style={{ marginRight: 100 }}>\r\n                <h6>\r\n                  {this.props.languageTranslation[\"welcomeTextDrawer\"] +\r\n                    \" \" +\r\n                    this.props.userName}\r\n                </h6>\r\n              </ListItem>\r\n              <Divider />\r\n              <ListItem button style={{ marginRight: 100 }}>\r\n                <ListItemIcon>\r\n                  <HomeIcon />\r\n                </ListItemIcon>\r\n                <span>{this.props.languageTranslation[\"home\"]}</span>\r\n              </ListItem>\r\n              <ListItem button style={{ marginRight: 100 }}>\r\n                <ListItemIcon>\r\n                  <BookIcon />\r\n                </ListItemIcon>\r\n                <span>{this.props.languageTranslation[\"logs\"]}</span>\r\n              </ListItem>\r\n              <ListItem button style={{ marginRight: 100 }}>\r\n                <ListItemIcon>\r\n                  <PersonIcon />\r\n                </ListItemIcon>\r\n                <span>{this.props.languageTranslation[\"login_btn\"]}</span>\r\n              </ListItem>\r\n              <ListItem button style={{ marginRight: 100 }}>\r\n                <ListItemIcon>\r\n                  <CallReceivedIcon />\r\n                </ListItemIcon>\r\n                <span>Logout</span>\r\n              </ListItem>\r\n            </div>\r\n          </Slide>\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport DrawerList from \"./drawerList\";\r\n\r\nexport default class Navbar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      drawerOpen: false\r\n    };\r\n  }\r\n\r\n  toggleDrawer(e) {\r\n    let prevState = this.state.drawerOpen;\r\n    this.setState({\r\n      drawerOpen: !prevState\r\n    });\r\n  }\r\n\r\n  createIcon() {\r\n    if (this.props.icon === \"arrowBack\") {\r\n      return (\r\n        <Link to={this.props.link}>\r\n          <IconButton color={\"inherit\"}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n        </Link>\r\n      );\r\n    } else if (this.props.icon === \"menu\") {\r\n      return (\r\n        <IconButton color={\"inherit\"}>\r\n          <MenuIcon onClick={this.toggleDrawer.bind(this)} />\r\n        </IconButton>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\" color={this.props.color}>\r\n          <Toolbar>\r\n            {this.createIcon()}\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              {this.props.title}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          open={this.state.drawerOpen}\r\n          onClose={this.toggleDrawer.bind(this)}\r\n          width=\"100%\"\r\n        >\r\n          <DrawerList userName={this.props.userName} languageTranslation={this.props.languageTranslation}/>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\n\r\nexport default class NormalText extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: \"\",\r\n      suggestions: [],\r\n      autoSuggestions: []\r\n    };\r\n    this.getSuggestionValue = suggestion => suggestion.name;\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      value: this.props.line_translation,\r\n      autoSuggestions: this.props.autoSuggestions\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    console.log(newProps);\r\n  }\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  onUnfoucus(e) {\r\n    this.props.update({\r\n      index: this.props.index,\r\n      content: e.target.value\r\n    });\r\n  }\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: this.getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  getSuggestions(value) {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    return inputLength === 0\r\n      ? []\r\n      : this.state.autoSuggestions.filter(\r\n          suggestion =>\r\n            suggestion.content.toLowerCase().slice(0, inputLength) ===\r\n            inputValue\r\n        );\r\n  }\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    return (\r\n      <div>\r\n        <Autosuggest\r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n          getSuggestionValue={suggestion => suggestion.content}\r\n          renderSuggestion={suggestions => {\r\n            return (\r\n              <MenuItem component=\"div\">\r\n                <div>{suggestions.content}</div>\r\n              </MenuItem>\r\n            );\r\n          }}\r\n          inputProps={{\r\n            value: value,\r\n            onChange: this.onChange,\r\n            label: this.props.line_content\r\n          }}\r\n          renderSuggestionsContainer={options => (\r\n            <Paper {...options.containerProps} square>\r\n              {options.children}\r\n            </Paper>\r\n          )}\r\n          renderInputComponent={props => {\r\n            return (\r\n              <TextField\r\n                {...props}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onBlur={this.onUnfoucus.bind(this)}\r\n                fullWidth\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nexport default class Selector extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      mode: \"\"\r\n    };\r\n  }\r\n  handleChange = event => {\r\n    this.setState({ mode: event.target.value });\r\n  };\r\n\r\n  createMenu() {\r\n    return this.props.selections.map(selection => {\r\n      return (\r\n        <MenuItem key={selection.mode} value={selection.mode}>\r\n          {selection.text}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FormControl className=\"selector\">\r\n          <InputLabel>{this.props.title}</InputLabel>\r\n          <Select\r\n            value={this.state.mode}\r\n            onChange={this.handleChange}\r\n            input={<Input name=\"mode\" />}\r\n          >\r\n            {this.createMenu()}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","let settings = {\r\n  baseURL: \"https://api.mytranshelper.com/api/load-project\"\r\n};\r\n\r\nexport default settings;\r\n","import $ from \"jquery\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Navbar from \"./navbar\";\r\nimport NormalText from \"./normal-text\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport Selector from \"./selector\";\r\nimport settings from \"./settings/settings\";\r\n\r\nclass EditingPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      songInfo: {},\r\n      lines: [],\r\n      autoSuggest: [],\r\n      isloaded: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { state } = this.props.location;\r\n    this.setState({\r\n      songInfo: {\r\n        artist: state.artist,\r\n        title: state.title\r\n      }\r\n    });\r\n\r\n    let userID = state.userID;\r\n    $.getJSON(\r\n      `${settings.baseURL}/${userID}/${state.title}/${state.artist}`\r\n    ).done(data => {\r\n      this.setState({\r\n        lines: data[\"lines\"],\r\n        isloaded: true\r\n      });\r\n    });\r\n  }\r\n\r\n  autoSuggestions() {\r\n    let returnlst = [];\r\n    let i = 0;\r\n    for (let line of this.state.lines) {\r\n      if (line[\"line-translation\"] !== \"\") {\r\n        returnlst.push({\r\n          index: i,\r\n          content: line[\"line-translation\"]\r\n        });\r\n        i += 1;\r\n      }\r\n    }\r\n    return returnlst;\r\n  }\r\n\r\n  createNormalText() {\r\n    let suggestions = this.autoSuggestions();\r\n    console.log(\"A\");\r\n    return this.state.lines.map((line, index) => {\r\n      return (\r\n        <NormalText\r\n          key={index}\r\n          line_content={line[\"line-content\"]}\r\n          line_translation={line[\"line-translation\"]}\r\n          autoSuggestions={suggestions}\r\n          index={index}\r\n          update={this.updateHandler.bind(this)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  updateHandler(data) {\r\n    let oldSuggestion = this.state.autoSuggest;\r\n    for (let i = 0; i < oldSuggestion.length; i++) {\r\n      if (oldSuggestion[i].index === data.index) {\r\n        oldSuggestion[i].content = data.content;\r\n      } else {\r\n        oldSuggestion.push(data);\r\n      }\r\n    }\r\n    console.log(this.state.autoSuggest);\r\n    // this.setState({\r\n    //   autoSuggest: oldSuggestion\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar\r\n          icon=\"arrowBack\"\r\n          title={this.state.songInfo.title}\r\n          color=\"secondary\"\r\n          link=\"/\"\r\n        />\r\n        <Navbar title={this.state.songInfo.artist} color=\"default\" />\r\n        <Fade in={!this.state.isloaded} timeout={1000}>\r\n          <LinearProgress color=\"secondary\" />\r\n        </Fade>\r\n        <Selector\r\n          className=\"selector\"\r\n          selections={[\r\n            {\r\n              mode: \"words\",\r\n              text: this.props.languageTranslation.words\r\n            },\r\n            {\r\n              mode: \"sentences\",\r\n              text: this.props.languageTranslation.sentences\r\n            }\r\n          ]}\r\n          title={this.props.languageTranslation.type_selector}\r\n        />\r\n        {this.createNormalText()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(EditingPage);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ProjectCard extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  render() {\r\n    let title = decodeURI(this.props.title);\r\n    let artist = decodeURI(this.props.artist);\r\n    return (\r\n      <div className=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div className=\" project-card mdc-card pcard\">\r\n          <div className=\"mdl-card__title mdl-card--expand projectCard\">\r\n            <h2 className=\"mdl-card__title-text project-title\">\r\n              {artist + \"-\" + title}\r\n            </h2>\r\n          </div>\r\n          <div className=\"mdl-card__actions mdl-card--border\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/editing\",\r\n                state: {\r\n                  userID: this.props.userID,\r\n                  artist: artist,\r\n                  title: title\r\n                }\r\n              }}\r\n              className=\"mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect\"\r\n            >\r\n              {this.props.loadBtn}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Startcard extends Component {\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n\r\n        <div className=\"pcard mdc-card\">\r\n          <div className=\"mdl-card__title\">\r\n            <h2 className=\"mdl-card__title-text lang\" id=\"welcomeTextHeader\">\r\n              {this.props.languageTranslation.welcomeTextHeader}\r\n            </h2>\r\n          </div>\r\n          <div className=\"mdl-card__supporting-text lang\" id=\"welcomeText\">\r\n            {this.props.languageTranslation.welcomeText}\r\n          </div>\r\n          <div className=\"mdl-card__actions mdl-card--border\">\r\n            <a\r\n              className=\"mdl-button mdl-button--colored\r\n                                    mdl-js-button mdl-js-ripple-effect\"\r\n              id=\"create-project-btn\"\r\n            >\r\n              <div className=\"lang\" id=\"start-project-btn\">\r\n                {this.props.languageTranslation.start_project_btn}\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport $ from \"jquery\";\r\nimport ProjectCard from \"./projectcard\";\r\nimport Navbar from \"./navbar\";\r\nimport Startcard from \"./Startcard\";\r\n\r\nexport default class Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projects: [],\r\n      isloaded: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    $.getJSON(\r\n      `https://api.mytranshelper.com/api/get_all_projects_list/${\r\n        this.props.userID\r\n      }`\r\n    ).done(data => {\r\n      this.setState({ projects: data, isloaded: true });\r\n      $(\"#musiclist-loadingbar\").fadeOut(200);\r\n    });\r\n  }\r\n\r\n  createProjectCard() {\r\n    return this.state.projects.map(project => {\r\n      return (\r\n        <ProjectCard\r\n          key={project.title}\r\n          title={project.title}\r\n          artist={project.artist}\r\n          loadBtn={this.props.languageTranslation.loadProjectText}\r\n          userID={this.props.userID}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar\r\n          icon=\"menu\"\r\n          title={this.props.languageTranslation.title}\r\n          languageTranslation={this.props.languageTranslation}\r\n          userName={this.props.userName}\r\n        />\r\n        <div className=\"page-content\">\r\n          <Startcard languageTranslation={this.props.languageTranslation} />\r\n          <div>\r\n            <div>\r\n              <i className=\"material-icons mdl-chip__contact\">list</i>\r\n              {this.props.languageTranslation.projectTag}\r\n              <Fade\r\n                in={!this.state.isloaded}\r\n                timeout={{ enter: 0, exit: 2000 }}\r\n              >\r\n                <CircularProgress size={30} />\r\n              </Fade>\r\n            </div>\r\n          </div>\r\n          <Grow in={this.state.isloaded}>\r\n            <div className=\"row\">{this.createProjectCard()}</div>\r\n          </Grow>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","let current_version = 0.3;\r\nlet languageTranslation = {\r\n  en: {\r\n    \"start_project_btn\": \"Start Project\",\r\n    artistText: \"Artist\",\r\n    songText: \"Song's name\",\r\n    welcomeText:\r\n      \"Welcome to mytranshelper, please login first and then click the start project button so that you can start your lyrics translation project.\",\r\n    welcomeTextHeader: \"Getting Started\",\r\n    welcomeTextDrawer: \"Welcome\",\r\n    welcomeTextDrawerLogin: \"Welcome back,\",\r\n    dialogTitleText: \"Please enter your project info\",\r\n    uploadBtn: \"Upload lyrics\",\r\n    title: \"Home page\",\r\n    logpage: \"Update logs\",\r\n    \"logout_btn\": \"Log out\",\r\n    \"login_btn\": \"Log in\",\r\n    loadProjectText: \"加载项目\",\r\n    projectTag: \"Projects\",\r\n    loadProject: \"Load Project\",\r\n    \"editing_page_title\": \"Lyrics Translation\",\r\n    translationProject: \"Translation Project\",\r\n    \"original_text\": \"Original\",\r\n    \"translation_text\": \"Translation\",\r\n    \"saving_status\": \"Saved\",\r\n    words: \"Editing in words\",\r\n    sentences: \"Editing in sentences\",\r\n    \"type_selector\": \"Choose the way to display the text\",\r\n    \"doc_header\": \"Read the docs\",\r\n    \"doc_text\": \"Read some story about developing(Chinese only)\",\r\n    version: `Current version ${current_version}`,\r\n    \"header_0.05\": \"Version0.05\",\r\n    \"time_0.05\": \"2018/8/05\",\r\n    \"content_0.05\":\r\n      \"Set up the basic UI looking and added the lyrics editing function\",\r\n    \"header_0.1\": \"Version0.1\",\r\n    \"time_0.1\": \"2018/8/09\",\r\n    \"content_0.1\": \"Added the list of the songs which user uploaded\",\r\n    \"header_0.2\": \"Version0.2\",\r\n    \"time_0.2\": \"2018/8/11\",\r\n    \"content_0.2\":\r\n      \"Improved the way to display the lyrics. Redesign the mobile version and added the docs\",\r\n    home: \"Home\",\r\n    logs: \"Develop logs\",\r\n    createTimedLyrics: \"Create timed lyrics\",\r\n    usingApplemusic: \"Play music from Apple Music\",\r\n    uploadthetimedlyrics: \"Timed lyrics data has been uploaded\",\r\n    currentInfo:\r\n      \"Problem: Won't be able to highlight the word which has short period.\"\r\n  },\r\n\r\n  zh: {\r\n    \"start_project_btn\": \"开始项目\",\r\n    artistText: \"歌手\",\r\n    songText: \"歌名\",\r\n    welcomeText:\r\n      \"欢迎来到歌词翻译网站，请先登录，之后轻点下方的开始项目按钮，便可以轻松创建属于你的歌词翻译项目。\",\r\n    welcomeTextHeader: \"开始使用\",\r\n    welcomeTextDrawer: \"欢迎\",\r\n    welcomeTextDrawerLogin: \"欢迎回来,\",\r\n    dialogTitleText: \"请输入你的项目信息\",\r\n    uploadBtn: \"上传歌词\",\r\n    title: \"主页面\",\r\n    logpage: \"更新记录\",\r\n    \"logout_btn\": \"登出\",\r\n    \"login_btn\": \"登入\",\r\n    loadProjectText: \"加载项目\",\r\n    projectTag: \"全部项目\",\r\n    loadProject: \"读取项目\",\r\n    translationProject: \"翻译工程\",\r\n    \"editing_page_title\": \"歌词翻译\",\r\n    \"original_text\": \"原文\",\r\n    \"translation_text\": \"译文\",\r\n    \"saving_status\": \"已保存\",\r\n    words: \"按照单词方式编辑\",\r\n    sentences: \"按照句子方式编辑\",\r\n    type_selector: \"选择文本显示方式\",\r\n    \"doc_header\": \"阅读文档\",\r\n    \"doc_text\": \"阅读有关开发的一些故事\",\r\n    version: `当前版本 v${current_version}`,\r\n    \"header_0.05\": \"版本0.05\",\r\n    \"time_0.05\": \"2018/8/05\",\r\n    \"content_0.05\":\r\n      \"初步设计了整体UI以及加入了歌词翻译功能，增加了歌曲编辑功能\",\r\n    \"header_0.1\": \"版本0.1\",\r\n    \"time_0.1\": \"2018/8/09\",\r\n    \"content_0.1\": \"增加了歌曲列表，增加了多语种翻译\",\r\n    \"header_0.2\": \"版本0.2\",\r\n    \"time_0.2\": \"2018/8/11\",\r\n    \"content_0.2\":\r\n      \"增加了改进了用户编排歌词的方式，专门对手机版本进行了优化，改进了UI设计并且增加了文档\",\r\n    home: \"主界面\",\r\n    logs: \"开发日志\",\r\n    createTimedLyrics: \"创建同步歌词\",\r\n    usingApplemusic: \"播放苹果音乐歌曲\",\r\n    uploadthetimedlyrics: \"同步歌词数据已经上传，请刷新页面\",\r\n    currentInfo: \"问题：在歌词显示的时候会出现间隔过短导致无法高亮单词的问题。\",\r\n    sentencesmobile: \"以手机样式编辑\"\r\n  }\r\n};\r\nexport default languageTranslation;\r\n","import { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport EditingPage from \"./components/editing-page\";\nimport Home from \"./components/homePage\";\nimport languageTranslation from \"./components/settings/language\";\nimport React, { Component } from \"react\";\nimport \"material-design-lite/material.min.css\";\nimport \"material-design-lite/material.min.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    let languageCode = navigator.language.substr(0, 2);\n    this.state = {\n      title: \"\",\n      translation: languageTranslation[languageCode],\n      userID: \"e225f036-bef7-11e8-a97b-b0c090c3b9ec\",\n      userName: \"Qiwei Li\"\n    };\n  }\n\n  titleChangeHandler(title) {\n    console.log(title);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Home\n                  {...props}\n                  languageTranslation={this.state.translation}\n                  userID={this.state.userID}\n                  userName={this.state.userName}\n                />\n              )}\n            />\n            <Route\n              path=\"/editing\"\n              render={props => (\n                <EditingPage\n                  {...props}\n                  languageTranslation={this.state.translation}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}